@import 'root.scss';
@import 'fonts.scss';
@import 'style.scss';

// calendar variables
$calendar-positions-per-page: 4;
$calendar-time-stamps-count: 8;
$calendar-cell-width: 300px;
$calendar-cell-height: 70px;
$calendar-time-cell-width: $padding-card;
$calendar-cell-border-width: $thin-border-size;
$calendar-main-width-start: $calendar-cell-width * 5;

$visits-info-right-margin: 60px;

.calendarCard {
  @extend .elevation-min;

  padding: 0 $padding-card;
  overflow: visible;
  background: white;

  .calendarDay {
    margin-left: -1 * $calendar-time-cell-width;

    &:focus {
      outline: none;
    }

    // header - summary info about the day
    .calendarHeader {
      $p-l: $padding-card + $padding-normal * 2;
      padding-left: $p-l;
      margin: 0;
      display: flex;
      justify-content: space-between;
      width: calc(100% - #{$p-l} - #{$visits-info-right-margin});
      position: relative;
      margin-bottom: -$padding-normal * 2;
      z-index: 100;

      .primaryInfo {
        @extend .font-header;
      }

      .secondaryInfo {
        @extend .font-secondary-middle;
        vertical-align: top;
        margin-top: 5px;
      }

      .visitsInfo {
        @extend .font-primary;
        float: right;
        display: flex;
        flex-direction: column-reverse;

        .visitsInfoPotential {
          margin-right: 24px;
        }
      }
    }

    // not using now
    .calendarFooter {
      margin-left: $padding-card + $padding-normal * 2 - $thin-border-size;
      padding-top: $padding-normal * 2;
      display: inline-block;

      .primaryInfo {
        @extend .font-header-bold;
      }

      .secondaryInfo {
        @extend .font-secondary;
        vertical-align: top;
      }
    }

    // the main part of calendar card
    .calendarTable {
      --calendar-main-width: #{$calendar-main-width-start};
      --wrapper-width: 0px;

      display: grid;
      position: relative;

      grid-template-areas:
        'time wrapper'
        'time wrapper';

      grid-template-columns: $calendar-time-cell-width auto;
      grid-template-rows: $padding-card auto;

      padding-bottom: $thin-border-size; // * 2;
      // overflow: visible;

      &.hidden {
        visibility: hidden;
      }

      &.unloaded {
        visibility: hidden;
      }

      .wrapper {
        --positions-count: 10;

        display: grid;
        grid-area: wrapper;
        position: relative;

        padding-bottom: 2px;

        grid-template-columns: auto;
        grid-template-rows: $padding-card auto;

        // horizontal borders
        box-shadow: ($padding-card / 2 + 1) ($padding-card / 2 - 1) 0
            (-1 * $padding-card / 2) black,
          (-1 * $padding-card / 2 - 1) ($padding-card / 2 - 1) 0
            (-1 * $padding-card / 2) black;

        // only right border
        // box-shadow: ($padding-card / 2 + 1) ($padding-card / 2 - 1) 0
        //   (-1 * $padding-card / 2) black;

        padding-left: $thin-border-size;

        grid-template-areas:
          'positions'
          'main';

        overflow: hidden;

        .positionsRow {
          display: grid;
          grid-area: positions;

          grid-template-columns: repeat(var(--positions-count), 1fr);
          grid-template-rows: repeat(auto-fit, $padding-card);

          width: var(--calendar-main-width);
          height: $padding-card;

          .item {
            @extend .font-primary-semibold;

            // display: flex;
            // align-items: center;
            // justify-content: center;
            box-shadow: none;

            padding-left: $padding-normal * 2;
            height: $padding-card;
            line-height: $padding-card;
          }
        }

        .stickyContainer {
          position: fixed;
          top: $thin-border-size;
          overflow-x: hidden;
          box-shadow: 0 0 0 $thin-border-size black;
          width: calc(var(--wrapper-width) - #{$thin-border-size});
          // width: var(--wrapper-width);

          &.dockBottom {
            position: absolute;
            bottom: $thin-border-size;
            left: $thin-border-size;
            top: unset;
            z-index: 100;
          }

          &.dockTop {
            position: absolute;
            top: 0;
            z-index: 100;
          }

          &.hidden {
            visibility: hidden;
          }

          .item {
            // background: transparent;
          }
        }

        .mainGrid {
          display: grid;
          grid-area: main;

          grid-template-columns: repeat(var(--positions-count), 1fr);
          grid-template-rows: repeat(auto-fit, $calendar-cell-height);

          // width: var(--calendar-main-width);
          width: calc(var(--calendar-main-width) + #{$thin-border-size});

          .item {
            // border-left: solid black $thin-border-size;
            // border-right: solid black $thin-border-size;
          }
        }
      }

      .timeColumn {
        display: grid;
        grid-area: time;

        .item {
          &:first-child {
            height: $padding-card;
          }

          @extend .font-primary-semibold;
          display: flex;
          height: $calendar-cell-height;
          align-items: center;
          justify-content: center;
          box-shadow: none;

          .timeWrapper {
            .minutes {
              @extend .font-secondary-little;
              vertical-align: top;
            }
          }
        }
      }

      // default calendar cell item
      .item {
        position: relative;
        background: white;
        font-size: 16px;
        box-shadow: 0 0 0 $thin-border-size black;
        overflow: visible;
      }

      .calendarCell {
      }
    }
  }
}

.personCell {
  position: absolute;
  left: 0px;
  top: 0px;

  font-size: 20px;
  background: rgb(255, 255, 227);
  // border: solid darkcyan $thin-border-size;
  height: 100%;
  width: 100%;

  display: flex;
  align-items: center;
  justify-content: center;

  &.moving {
    position: fixed;
    z-index: 100;
  }

  &.hidden {
    visibility: hidden;
  }
}
